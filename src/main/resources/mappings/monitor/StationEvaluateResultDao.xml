<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cpit.cpmt.biz.dao.monitor.StationEvaluateResultDAO">
  <resultMap id="BaseResultMap" type="com.cpit.cpmt.dto.monitor.StationEvaluateResult">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="operator_id" jdbcType="VARCHAR" property="operatorId" />
    <result column="station_id" jdbcType="VARCHAR" property="stationId" />
    <result column="notice_status" jdbcType="INTEGER" property="noticeStatus" />
    <result column="notice_content" jdbcType="VARCHAR" property="noticeContent" />
    <result column="evalute_result" jdbcType="VARCHAR" property="evaluteResult" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="in_time" jdbcType="TIMESTAMP" property="inTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, operator_id, station_id,notice_status,notice_content,evalute_result,in_time,remark
  </sql>
  <select id="selectByStationId"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mon_bms_station_evaluate_result
    where operator_id = #{operatorId} and station_id=#{stationId}
    order by in_time  desc limit 1;
  </select>

  <insert id="insertStationEvaluateResult" parameterType="com.cpit.cpmt.dto.monitor.StationEvaluateResult">
        insert into mon_bms_station_evaluate_result
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="operatorId != null">
                operator_id,
            </if>
            <if test="stationId != null">
                station_id,
            </if>
            <if test="noticeStatus != null">
                notice_status,
            </if>
            <if test="noticeContent != null">
                notice_content,
            </if>
            <if test="evaluteResult != null">
                evalute_result,
            </if>
            <if test="inTime != null">
                in_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="operatorId != null">
                #{operatorId,jdbcType=VARCHAR},
            </if>
            <if test="stationId != null">
                #{stationId,jdbcType=VARCHAR},
            </if>
            <if test="noticeStatus != null">
                #{noticeStatus},
            </if>
            <if test="noticeContent != null">
                #{noticeContent},
            </if>
            <if test="evaluteResult != null">
                #{evaluteResult},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
            <if test="inTime != null">
                #{inTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

  <update id="updateStationEvaluateResult" parameterType="com.cpit.cpmt.dto.monitor.StationEvaluateResult">
        update mon_bms_station_evaluate_result
        <set>
            <if test="noticeStatus != null">
                notice_status = #{noticeStatus},
            </if>
            <if test="noticeContent != null">
                notice_content = #{noticeContent},
            </if>
        </set>
        where station_id= #{stationId} and operator_id = #{operatorId}
    </update>

    <select id="selectRiskLevel" resultType="java.lang.Integer">
      SELECT count(bms_eva_result.id) notice_status
    from mon_bms_evaluate_result bms_eva_result , exc_equipment_info equipment
    where bms_eva_result.operator_id=equipment.operator_id and bms_eva_result.equipment_id=equipment.equipment_id
    and bms_eva_result.evalute_result=#{level}
    and equipment.station_id=#{stationId}
    and equipment.operator_id=#{operatorId}
    </select>

    <select id="selectStationRiskType" resultType="java.lang.Integer">
      SELECT DISTINCT bms_eva_result.ave_id
    from mon_bms_evaluate_result bms_eva_result , exc_equipment_info equipment
    where bms_eva_result.operator_id=equipment.operator_id and bms_eva_result.equipment_id=equipment.equipment_id
    and equipment.station_id=#{stationId}
    and equipment.operator_id=#{operatorId}
    ORDER BY bms_eva_result.ave_id
    </select>

    <select id="getRiskStationList" resultMap="BaseResultMap">
        SELECT DISTINCT equipment.station_id,equipment.operator_id
        from mon_bms_evaluate_result bms_eva_result , exc_equipment_info equipment
        where bms_eva_result.operator_id=equipment.operator_id and bms_eva_result.equipment_id=equipment.equipment_id
    </select>

</mapper>